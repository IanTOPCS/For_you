
//=======================================================
//  This code is generated by Terasic System Builder
//=======================================================

module mcu(

	//////////// CLOCK //////////
	input CLK,

	//////////// 7-segment decoder //////////
	output [6:0] HEX0,
	output [6:0] HEX1,
	output [6:0] HEX2,
	output [6:0] HEX3,
	
	//////////// LED /////////////
	output [9:0] LED,
	
	//////////// SWITCH //////////
	input [9:0] SW,
	
	//////////// BUTTON //////////
	input [2:0] BTN
	
);
//*******************************//

logic clk;
logic [3:0]id;

birthday f0(
	.reset(~BTN[0]),
	.clk(clk),
	.id(id)
);

freg_div_23 f1(
	.clk(CLK),
	.reset(~BTN[0]),
	.clk_out(clk)
);

seven_segment f2(
	.in(id),
	.out(HEX0)
);

/*
logic clk;
logic [2:0] sec_tens, min_tens;
logic [3:0] sec_units, min_units;
freg_div_23 f0(
	.clk(CLK),
	.reset(~BTN[0]),
	.clk_out(clk)
);

day_timer f1(
	.clk(clk),
	.reset(~BTN[0]),
	.sec_units(sec_units),
	.sec_tens(sec_tens),
	.min_units(min_units),
	.min_tens(min_tens)
);

seven_segment f2(
	.in(sec_units),
	.out(HEX0)
);

seven_segment f3(
	.in(sec_tens),
	.out(HEX1)
);

seven_segment f4(
	.in(min_units),
	.out(HEX2)
);

seven_segment f5(
	.in(min_tens),
	.out(HEX3)
);
*/

/*
logic clk;
freg_div_23 f0(
	.clk(CLK),
	.reset(~BTN[1]),
	.clk_out(clk)
);

RGYcombine f1(
	.clk(clk),
	.reset(~BTN[1]),
	.r({LED[7], LED[2]}),
	.y({LED[6], LED[1]}),
	.g({LED[5], LED[0]})
);
*/

/*
logic [3:0]q;
logic clk;
freg_div_23 f0(
	.clk(CLK),
	.reset(~BTN[1]),
	.clk_out(clk)
);

fourupdown f1(
	.clk(clk),
	.reset(~BTN[1]),
	.x(SW[0]),
	.q(q)
);


seven_segment f2(
	.in(q),
	.out(HEX0)
);
*/

/*
comfourbitcnt fun(
	.clk(BTN[0]),
	.reset(~BTN[1]),
	.seg(HEX0)
);
*/

/*
BCD_show fun(
	.A(SW[3:0]),
	.B(SW[7:4]),
	.carry_in(SW[8]),
	.output_carry(LED[0]),
	.carry_out(LED[1]),
	.seg(HEX0)
);
*/
/*
logic [3:0]seg;
BCD first(
	.a(SW[3:0]),
	.b(SW[7:4]),
	.c(SW[8]),
	.S(seg),
	.carry_out(LED[1]),
	.output_carry(LED[0])
);
seven_segment second(
	.in(seg),
	.out(HEX0)
);
*/

/*
logic [3:0]S;
add_minus fun(
	.A(SW[3:0]),
	.B(SW[7:4]),
	.m(SW[8]),
	.S(S),
	.c(LED[0]),
	.v(LED[1])
);

seven_segment fun1(
	.in(S),
	.out(HEX0)
);
*/
/*
seven_segment fun1(
	.in(SW[3:0]),
	.out(HEX0)
);
*/
// add module here
/*
adder_8bit adder1(
	.a(SW[7:0]),
	.b(SW[7:0]),
	.s(LED[7:0])
);

sub_8bit sub1(
	.a(8'd20),
	.b(8'd12),
	.s()
);
*/
/*add add1(
	.a(SW[0]),
	.b(SW[1]),
	.cin(SW[2]),
	.s(LED[0]),
	.cout(LED[1])
);*/
/*
adder4 add4(
	.A(SW[3:0]),
	.B(SW[7:4]),
	.S(LED[3:0]),
	.cout(LED[4]),
	.cin(SW[8])
);
*/
//*******************************//

endmodule
